{"version":3,"sources":["js/utils.js","js/circleGrabber.js","js/drawingFunctions.js","js/main.js"],"names":["rects","clearCanvas","clearRect","canvas","width","height","fixNegativeHeightRect","rect","newRect","h","y","collides","circle1","rect1","circleRect","x","r","rect2","w","collidesWithRect","circle","checkingRect","some","getNewCircle","providedFlavor","kidArray","Math","floor","random","direction_x","direction_y","flavor","indexOf","img","document","querySelector","fillColor","old_direction_x","old_direction_y","movable","grabbedCircles","mouseIsDown","handleGrabCircle","e","mousePos","clientX","offsetLeft","clientY","offsetTop","i","circles","length","sqrt","push","handleReleaseGrabbedCircle","pop","handleMoveGrabbedCircle","drawCandle","boost","fillRect","Object","values","saveColors","color","oldColor","ctx","strokeStyle","oldFillColor","fillStyle","restoreColors","drawCircle","beginPath","arc","PI","stroke","fill","drawBase","drawMenorah","drawCircles","filter","forEach","circleToDraw","drawImage","drawScore","font","fillText","score","getContext","HEIGHT","WIDTH","frameCount","numberOfCircles","parseInt","window","location","href","split","Array","moveCircles","circleCollidesWithBin","pow","binCircle","checkIfCirclesAreInBin","includes","setTimeout","binColor","drawEverything","style","visibility","addKid","kid","addEventListener","setInterval"],"mappings":"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","file":"main.c944b879.js","sourceRoot":"..","sourcesContent":["import {binCircle, canvas, checkingRect, circleCollidesWithBin, ctx} from \"./main\";\n\nexport const rects = []\n\nexport const clearCanvas = () => {\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n}\nconst fixNegativeHeightRect = (rect) => {\n  const newRect = {...rect};\n  if (rect.h < 0) {\n    newRect.y += rect.h;\n    newRect.h = -rect.h;\n  }\n  return newRect;\n}\nexport const collides = (circle1, rect1) => {\n  const circleRect = {\n    x: circle1.x - circle1.r,\n    y: circle1.y - circle1.r,\n    w: circle1.r * 2,\n  };\n\n  const rect2 = rect1.h > 0 ? rect1 : fixNegativeHeightRect(rect1);\n\n  return (\n    rect2.x < circleRect.x && circleRect.x < rect2.x + rect2.w &&\n    rect2.y < circleRect.y && circleRect.y < rect2.y + rect2.h\n  ) || (\n    rect2.x < circleRect.x && circleRect.x < rect2.x + rect2.w &&\n    rect2.y < circleRect.y + circleRect.w && circleRect.y + circleRect.w < rect2.y + rect2.h\n  ) || (\n    rect2.x < circleRect.x + circleRect.w && circleRect.x + circleRect.w < rect2.x + rect2.w &&\n    rect2.y < circleRect.y && circleRect.y < rect2.y + rect2.h\n  ) || (\n    rect2.x < circleRect.x + circleRect.w && circleRect.x + circleRect.w < rect2.x + rect2.w &&\n    rect2.y < circleRect.y + circleRect.w && circleRect.y + circleRect.w < rect2.y + rect2.h\n  );\n}\nexport const collidesWithRect = (circle) => {\n  if (!collides(circle, checkingRect)) return false;\n  if (circleCollidesWithBin(circle)) return true;\n\n  return rects.some(rect => collides(circle, rect));\n}\n\nexport const getNewCircle = (providedFlavor) => {\n  const kidArray = [\"dov\", \"racheli\", \"eitan\"];\n  const x = Math.floor(Math.random() * 8) * 100 + 100;\n  const y = Math.random() * 600 + 100;\n  const r = Math.floor(Math.random() * 30) + 25;\n  const x_boost = 0;//(Math.random() > 0.8) ? 20 : 0;\n  const direction_x = Math.random() * 2 - 1 + x_boost;\n  const direction_y = (Math.random() * 2 - 1) * 5;\n  const flavor = providedFlavor ? kidArray.indexOf(providedFlavor) : Math.floor(Math.random() * 3);\n  const img = document.querySelector(`#${kidArray[flavor]}`);\n  const fillColor = [\"green\", \"pink\", \"orange\"][flavor];\n\n  if(collidesWithRect({x, y, r})) {\n    return getNewCircle(providedFlavor);\n  }\n\n  return {\n    x, y, r,\n    direction_x, direction_y,\n    fillColor,\n    img,\n    old_direction_x: 0, old_direction_y: 0,\n    movable: true,\n  };\n};\n","import {canvas, circles} from \"./main\";\n\nexport let grabbedCircles = [];\nexport let mouseIsDown = false;\n\nexport const handleGrabCircle = (e) => {\n  mouseIsDown = true;\n  const mousePos = {\n    x: e.clientX - canvas.offsetLeft,\n    y: e.clientY - canvas.offsetTop\n  };\n\n  for (let i = 0; i < circles.length; i++) {\n    if (circles[i] && circles[i].movable) {\n      if (Math.sqrt((mousePos.x - circles[i].x) ** 2 + (mousePos.y - circles[i].y) ** 2) < circles[i].r) {\n        circles[i].old_direction_x = circles[i].direction_x;\n        circles[i].old_direction_y = circles[i].direction_y;\n        circles[i].direction_x = 0;\n        circles[i].direction_y = 0;\n        grabbedCircles.push(i);\n      }\n    }\n  }\n}\nexport const handleReleaseGrabbedCircle = (e) => {\n  mouseIsDown = false;\n  for (let i = 0; i < grabbedCircles.length; i++) {\n    circles[grabbedCircles[i]].direction_x = circles[grabbedCircles[i]]?.old_direction_x || 0;\n    circles[grabbedCircles[i]].direction_y = circles[grabbedCircles[i]]?.old_direction_y || 0;\n  }\n  for (let i = 0; i < grabbedCircles.length; i++) {\n    grabbedCircles.pop();\n  }\n}\nexport const handleMoveGrabbedCircle = (e) => {\n  if (mouseIsDown) {\n    const mousePos = {\n      x: e.clientX - canvas.offsetLeft,\n      y: e.clientY - canvas.offsetTop\n    };\n    for (let i = 0; i < grabbedCircles.length; i++) {\n      circles[grabbedCircles[i]].x = mousePos.x;\n      circles[grabbedCircles[i]].y = mousePos.y;\n    }\n  }\n}\n","import {ctx, circles, score} from \"./main\";\nimport {rects} from \"./utils\";\n\nexport const drawCandle = (x, boost = false) => {\n  const newRect = {x, y: 500, w: 50, h: -(150 + (boost ? 100 : 0))};\n  ctx.fillRect(...Object.values(newRect));\n  rects.push(newRect)\n};\n\nexport const saveColors = (color, fillColor) => {\n  let oldColor = ctx.strokeStyle, oldFillColor = ctx.fillStyle;\n  if (color) {\n    oldColor = ctx.strokeStyle;\n    ctx.strokeStyle = color;\n  }\n  if (fillColor) {\n    oldFillColor = ctx.fillStyle;\n    ctx.fillStyle = fillColor;\n  }\n\n  return {oldColor, oldFillColor};\n}\n\nexport const restoreColors = (oldColor, oldFillColor) => {\n  if (oldColor) ctx.strokeStyle = oldColor;\n  if (oldFillColor) ctx.fillStyle = oldFillColor;\n}\n\n\nexport const drawCircle = (x, y, r, color = null, fillColor = null) => {\n  const {oldColor, oldFillColor} = saveColors(color, fillColor);\n\n  ctx.beginPath();\n  ctx.arc(x, y, r, 0, 2 * Math.PI);\n  ctx.stroke();\n  ctx.fill();\n\n  restoreColors(oldColor, oldFillColor);\n};\nexport const drawBase = (x) => {\n  const newRect = {x, y: 500, w: 50 + 8 * 100, h: -50};\n  rects.push(newRect);\n  ctx.fillRect(...Object.values(newRect));\n}\n\nexport const drawMenorah = () => {\n  for (let i = 0; i <= 8; i++) {\n    const boost = i === 4;\n    drawCircle(75 + i * 100, 345 - (boost ? 100 : 0), 15, \"red\", \"yellow\");\n  }\n  drawBase(50);\n\n  for (let i = 0; i <= 8; i++) {\n    const boost = i === 4;\n    drawCandle(50 + i * 100, boost);\n  }\n}\n\nexport const drawCircles = () => {\n  circles.filter((x) => x).forEach((circleToDraw) => {\n    if(circleToDraw.movable) {\n      drawCircle(circleToDraw.x, circleToDraw.y, circleToDraw.r, \"black\", circleToDraw?.fillColor);\n    }\n    ctx.drawImage(circleToDraw.img, circleToDraw.x - circleToDraw.r * 0.8, circleToDraw.y - circleToDraw.r * 0.8, circleToDraw.r * 1.5, circleToDraw.r * 1.5);\n  });\n}\nexport const drawScore = () => {\n  ctx.font = \"30px Arial\";\n  const {oldColor, oldFillColor} = saveColors(\"black\", \"black\");\n  ctx.fillText(`Score: ${score}`, 850, 30);\n  restoreColors(oldColor, oldFillColor);\n}\n","import {clearCanvas, collides, collidesWithRect, getNewCircle, rects} from \"./utils\";\nimport {\n  grabbedCircles,\n  handleGrabCircle,\n  handleMoveGrabbedCircle,\n  handleReleaseGrabbedCircle,\n  mouseIsDown\n} from \"./circleGrabber\";\nimport {drawCircle, drawCircles, drawMenorah, drawScore, restoreColors, saveColors} from \"./drawingFunctions\";\n\nexport let canvas = document.querySelector(\"#myCanvas\");\nexport let ctx = canvas.getContext(\"2d\");\n\nctx.fillStyle = \"#FF0000\";\n\nconst HEIGHT = 1000, WIDTH = 1000;\n\nexport let score = 0;\n\nexport const checkingRect = {x: 50, y: 500, w: 50 + 8 * 100, h: -245};\n\n\nlet frameCount = 0;\n// get a number of circles from the url param number or 10 if not provided\nlet numberOfCircles = parseInt(window.location.href.split(\"?\")[1]?.split(\"=\")[1]) || 1;\n\n\n\nexport let circles = Array(numberOfCircles).fill(null);\n\nconst moveCircles = (e) => {\n  for(let i = 0; i < circles.length; i++) {\n    if(!circles[i]) circles[i] = getNewCircle();\n\n    if (collidesWithRect(circles[i])) {\n      circles[i].direction_x *= -1;\n      circles[i].direction_y *= -1;\n    }\n    else if(circles[i].x - circles[i].r < 0 || circles[i].x + circles[i].r > WIDTH) {\n      circles[i].direction_x *= -1;\n    }\n    else if(circles[i].y - circles[i].r < 0 || circles[i].y + circles[i].r > HEIGHT) {\n      circles[i].direction_y *= -1;\n    }\n\n    circles[i].x -= circles[i].direction_x;\n    circles[i].y -= circles[i].direction_y;\n  }\n};\n\nexport const circleCollidesWithBin = (circle) => {\n  return Math.sqrt(\n    Math.pow(binCircle.x - circle?.x, 2) + Math.pow(binCircle.y - circle?.y, 2)\n  ) < binCircle.r + circle?.r\n}\n\nconst checkIfCirclesAreInBin = () => {\n  if(grabbedCircles.length === 0) return;\n  circles.filter(x => x).forEach((circle, i) => {\n    if (\n      circle &&\n      circle.movable &&\n      grabbedCircles.includes(i) && circleCollidesWithBin(circle)) {\n      circle[\"direction_x\"] = 0;\n      circle[\"direction_y\"] = 0;\n      circle[\"old_direction_x\"] = 0;\n      circle[\"old_direction_y\"] = 0;\n      circle[\"movable\"] = false;\n      circle[\"fillColor\"] = \"red\";\n      score++;\n\n      // expand the bin a bit to make room\n      binCircle.x -= 10;\n      binCircle.y -= 10;\n      binCircle.r += 10;\n\n      if(score === circles.length) {\n        if(score > 10) {\n          for (let i = 0; i < 75; i++) {\n            setTimeout(() => circles.push(getNewCircle()), 300 + i * 100);\n          }\n        }\n        else {\n          //set score to a cool unicode character\n          score = \"🎉\";\n          setTimeout(() => {\n            // reload the page but add a url param called number with one more than the current number of circles\n            window.location.href = window.location.href.split(\"?\")[0] + \"?number=\" + (circles.length + 1);\n          }, 1000);\n        }\n      }\n    }\n  });\n};\n\nexport const binCircle = {x: 1000, y: 1000, r: 200};\n\nlet binColor = \"black\";\nfunction drawEverything() {\n\n// hide #dovButton if numberOfCircles is 1\n  if(numberOfCircles < 5) {\n    document.querySelector(\"#dovButton\").style.visibility = \"hidden\";\n    document.querySelector(\"#eitanButton\").style.visibility = \"hidden\";\n    document.querySelector(\"#racheliButton\").style.visibility = \"hidden\";\n  }\n\n  frameCount++;\n  clearCanvas();\n  // ctx.fillRect(...Object.values(checkingRect));\n\n  drawMenorah();\n\n  drawCircle(binCircle.x, binCircle.y, binCircle.r, \"black\", binColor);\n\n  checkIfCirclesAreInBin();\n\n  drawCircles();\n\n  if(frameCount % 1 === 0) {\n    moveCircles();\n  }\n\n  drawScore();\n}\n\nexport const addKid = (kid) => {\n  circles.push(getNewCircle(kid))\n}\n\ndocument.addKid = addKid;\n\ncanvas.addEventListener(\"mousedown\", handleGrabCircle);\ncanvas.addEventListener(\"mouseup\", handleReleaseGrabbedCircle);\ncanvas.addEventListener(\"mousemove\", handleMoveGrabbedCircle);\n\nsetInterval(drawEverything, 50);\n"]}